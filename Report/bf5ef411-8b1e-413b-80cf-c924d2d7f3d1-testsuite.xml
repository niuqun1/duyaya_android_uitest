<ns0:test-suite xmlns:ns0="urn:model.allure.qatools.yandex.ru" start="1568104473173" stop="1568104576889">
  <description>

======================

@author:niuqun

@time:2019/9/4:10:36 AM

@email:17689551930@163.com

======================

</description>
  <name>test_duyaya_one</name>
  <labels/>
  <test-cases>
    <test-case start="1568104473173" status="failed" stop="1568104485480">
      <name>Test_1.test_wx_login</name>
      <failure>
        <message>TimeoutException: Message: 
</message>
        <stack-trace>self = &lt;test_duyaya_one.Test_1 object at 0x1058c2250&gt;

    def test_wx_login(self):
&gt;       self.obj.click_wx_lojin()

Scripts/test_duyaya_one.py:26: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
Page/duyaya_test.py:31: in click_wx_lojin
    self.click_element(Page.wx_login)
Base/Base.py:54: in click_element
    self.search_element(loc).click()
Base/Base.py:33: in search_element
    return WebDriverWait(self.driver, timeout, poll).until(lambda x: x.find_element(*loc))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="88c776e2-134f-433b-8cfc-4fc0aa753c0e")&gt;
method = &lt;function Base.search_element.&lt;locals&gt;.&lt;lambda&gt; at 0x1058ce830&gt;, message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
        return value is not False."""
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message:

../../dyy/venv/lib/python3.7/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="7029-MainThread"/>
        <label name="host" value="edzdeMacBook-Pro.local"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1568104485482" status="passed" stop="1568104494101">
      <name>Test_1.test_discover_click</name>
      <attachments>
        <attachment source="daee92fb-d03d-45ee-91fa-3a2f5806153c-attachment.txt" title="Captured log call" type="text/plain"/>
      </attachments>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="7029-MainThread"/>
        <label name="host" value="edzdeMacBook-Pro.local"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1568104494103" status="passed" stop="1568104497310">
      <name>Test_1.test_click_</name>
      <attachments>
        <attachment source="68609b28-4600-4bb8-bba2-c868e6052325-attachment.txt" title="Captured log call" type="text/plain"/>
      </attachments>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="7029-MainThread"/>
        <label name="host" value="edzdeMacBook-Pro.local"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1568104497312" status="failed" stop="1568104510418">
      <name>Test_1.test_swit_click</name>
      <failure>
        <message>TimeoutException: Message: 
</message>
        <stack-trace>self = &lt;test_duyaya_one.Test_1 object at 0x1059a1810&gt;

    def test_swit_click(self):
        self.obj.slide(155,2359,155,400,1000)
        sleep(2)
        self.obj.click_who_word()
        print(22222222222222)
        sleep(2)
&gt;       self.obj.click_download()

Scripts/test_duyaya_one.py:46: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
Page/duyaya_test.py:52: in click_download
    self.click_element(Page.download)
Base/Base.py:54: in click_element
    self.search_element(loc).click()
Base/Base.py:33: in search_element
    return WebDriverWait(self.driver, timeout, poll).until(lambda x: x.find_element(*loc))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="88c776e2-134f-433b-8cfc-4fc0aa753c0e")&gt;
method = &lt;function Base.search_element.&lt;locals&gt;.&lt;lambda&gt; at 0x10597aa70&gt;, message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
        return value is not False."""
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message:

../../dyy/venv/lib/python3.7/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException</stack-trace>
      </failure>
      <attachments>
        <attachment source="b2e7fd3a-1ef8-4cc5-9d11-a3747d6bb14a-attachment.txt" title="Captured log call" type="text/plain"/>
      </attachments>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="7029-MainThread"/>
        <label name="host" value="edzdeMacBook-Pro.local"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1568104510420" status="failed" stop="1568104523430">
      <name>Test_1.test_right</name>
      <failure>
        <message>TimeoutException: Message: 
</message>
        <stack-trace>self = &lt;test_duyaya_one.Test_1 object at 0x1058c2fd0&gt;

    def test_right(self):
&gt;       self.obj.click_return()

Scripts/test_duyaya_one.py:49: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
Page/duyaya_test.py:128: in click_return
    self.click_element(Page.return_lict)
Base/Base.py:54: in click_element
    self.search_element(loc).click()
Base/Base.py:33: in search_element
    return WebDriverWait(self.driver, timeout, poll).until(lambda x: x.find_element(*loc))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="88c776e2-134f-433b-8cfc-4fc0aa753c0e")&gt;
method = &lt;function Base.search_element.&lt;locals&gt;.&lt;lambda&gt; at 0x10597a8c0&gt;, message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
        return value is not False."""
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message:

../../dyy/venv/lib/python3.7/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="7029-MainThread"/>
        <label name="host" value="edzdeMacBook-Pro.local"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1568104523431" status="passed" stop="1568104528237">
      <name>Test_1.test_hungry</name>
      <attachments>
        <attachment source="24e50926-8a57-485c-8387-f62610830c2b-attachment.txt" title="Captured log call" type="text/plain"/>
      </attachments>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="7029-MainThread"/>
        <label name="host" value="edzdeMacBook-Pro.local"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1568104528239" status="failed" stop="1568104537398">
      <name>Test_1.test_picnic</name>
      <failure>
        <message>TimeoutException: Message: 
</message>
        <stack-trace>self = &lt;test_duyaya_one.Test_1 object at 0x10590d5d0&gt;

    def test_picnic(self):
        self.obj.click_picnic()
&gt;       self.obj.click_download()

Scripts/test_duyaya_one.py:59: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
Page/duyaya_test.py:52: in click_download
    self.click_element(Page.download)
Base/Base.py:54: in click_element
    self.search_element(loc).click()
Base/Base.py:33: in search_element
    return WebDriverWait(self.driver, timeout, poll).until(lambda x: x.find_element(*loc))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="88c776e2-134f-433b-8cfc-4fc0aa753c0e")&gt;
method = &lt;function Base.search_element.&lt;locals&gt;.&lt;lambda&gt; at 0x10597a560&gt;, message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
        return value is not False."""
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message:

../../dyy/venv/lib/python3.7/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException</stack-trace>
      </failure>
      <attachments>
        <attachment source="13fb48fc-c1a7-4f2d-9577-636e0b5bb512-attachment.txt" title="Captured log call" type="text/plain"/>
      </attachments>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="7029-MainThread"/>
        <label name="host" value="edzdeMacBook-Pro.local"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1568104537400" status="failed" stop="1568104553550">
      <name>Test_1.test_click_what_rhis</name>
      <failure>
        <message>TimeoutException: Message: 
</message>
        <stack-trace>self = &lt;test_duyaya_one.Test_1 object at 0x10599ead0&gt;

    def test_click_what_rhis(self):
        self.obj.click_what_rhis()
&gt;       self.obj.click_download()

Scripts/test_duyaya_one.py:66: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
Page/duyaya_test.py:52: in click_download
    self.click_element(Page.download)
Base/Base.py:54: in click_element
    self.search_element(loc).click()
Base/Base.py:33: in search_element
    return WebDriverWait(self.driver, timeout, poll).until(lambda x: x.find_element(*loc))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="88c776e2-134f-433b-8cfc-4fc0aa753c0e")&gt;
method = &lt;function Base.search_element.&lt;locals&gt;.&lt;lambda&gt; at 0x10597ab90&gt;, message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
        return value is not False."""
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message:

../../dyy/venv/lib/python3.7/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException</stack-trace>
      </failure>
      <attachments>
        <attachment source="16544c0b-84e7-49bb-8237-40062b80bc28-attachment.txt" title="Captured log call" type="text/plain"/>
      </attachments>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="7029-MainThread"/>
        <label name="host" value="edzdeMacBook-Pro.local"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1568104553552" status="passed" stop="1568104564731">
      <name>Test_1.test_on_the_fqrm</name>
      <attachments>
        <attachment source="f331adf6-9e7e-44cd-9e6f-4be3d6a7c4a9-attachment.txt" title="Captured log call" type="text/plain"/>
      </attachments>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="7029-MainThread"/>
        <label name="host" value="edzdeMacBook-Pro.local"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1568104564733" status="failed" stop="1568104572850">
      <name>Test_1.test_click_review</name>
      <failure>
        <message>TimeoutException: Message: 
</message>
        <stack-trace>self = &lt;test_duyaya_one.Test_1 object at 0x1059a1c10&gt;

    def test_click_review(self):
&gt;       self.obj.click_review()

Scripts/test_duyaya_one.py:77: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
Page/duyaya_test.py:85: in click_review
    self.click_element(Page.review)
Base/Base.py:54: in click_element
    self.search_element(loc).click()
Base/Base.py:33: in search_element
    return WebDriverWait(self.driver, timeout, poll).until(lambda x: x.find_element(*loc))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="88c776e2-134f-433b-8cfc-4fc0aa753c0e")&gt;
method = &lt;function Base.search_element.&lt;locals&gt;.&lt;lambda&gt; at 0x105973320&gt;, message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
        return value is not False."""
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message:

../../dyy/venv/lib/python3.7/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="7029-MainThread"/>
        <label name="host" value="edzdeMacBook-Pro.local"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1568104572852" status="passed" stop="1568104573683">
      <name>Test_1.test_click_my</name>
      <attachments>
        <attachment source="b4583f3d-e09b-4240-b9e5-0f32aa23db07-attachment.txt" title="Captured log call" type="text/plain"/>
      </attachments>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="7029-MainThread"/>
        <label name="host" value="edzdeMacBook-Pro.local"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1568104573685" status="passed" stop="1568104575434">
      <name>Test_1.test_click_discover</name>
      <attachments>
        <attachment source="b9c5e97d-ec53-46f9-be3c-322880462a6a-attachment.txt" title="Captured log call" type="text/plain"/>
      </attachments>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="7029-MainThread"/>
        <label name="host" value="edzdeMacBook-Pro.local"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1568104575436" status="passed" stop="1568104576889">
      <name>Test_1.test_click_duyaya</name>
      <attachments>
        <attachment source="e1ffa78d-5793-445b-9b58-a0828c512119-attachment.txt" title="Captured log call" type="text/plain"/>
      </attachments>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="7029-MainThread"/>
        <label name="host" value="edzdeMacBook-Pro.local"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
  </test-cases>
</ns0:test-suite>
